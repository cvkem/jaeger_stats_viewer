
#  see: https://github.com/tauri-apps/tauri-action
# 
name: 'publish'
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - uses: pnpm/action-setup@v2
        with:
          version: 8.7.6
      - name: install frontend dependencies
        run: pnpm install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.PYPI_API_TOKEN2 }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false




# ###
# name: CI

# on:
#   push:
#     branches:
#       - main
#       - master
#     tags:
#       - '*'
#   pull_request:
#   workflow_dispatch:

# permissions:
#   contents: read

# jobs:
#   linux:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
#     steps:
#       - uses: actions/checkout@v4
#       - name: Build wheels
#         uses: PyO3/maturin-action@v1
#         with:
#           target: ${{ matrix.target }}
#           args: --release --out dist
#           sccache: 'true'
#           manylinux: auto
#       - name: Upload wheels
#         uses: actions/upload-artifact@v3
#         with:
#           name: wheels
#           path: dist

#   windows:
#     runs-on: windows-latest
#     strategy:
#       matrix:
#         target: [x64, x86]
#     steps:
#       - uses: actions/checkout@v4
#       - name: Build wheels
#         uses: PyO3/maturin-action@v1
#         with:
#           target: ${{ matrix.target }}
#           args: --release --out dist
#           sccache: 'true'
#       - name: Upload wheels
#         uses: actions/upload-artifact@v3
#         with:
#           name: wheels
#           path: dist

#   macos:
#     runs-on: macos-latest
#     strategy:
#       matrix:
#         target: [x86_64, aarch64]
#     steps:
#       - uses: actions/checkout@v4
#       - name: Build wheels
#         uses: PyO3/maturin-action@v1
#         with:
#           target: ${{ matrix.target }}
#           args: --release --out dist
#           sccache: 'true'
#       - name: Upload wheels
#         uses: actions/upload-artifact@v3
#         with:
#           name: wheels
#           path: dist

#   sdist:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Build sdist
#         uses: PyO3/maturin-action@v1
#         with:
#           command: sdist
#           args: --out dist
#       - name: Upload sdist
#         uses: actions/upload-artifact@v3
#         with:
#           name: wheels
#           path: dist

#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     if: "startsWith(github.ref, 'refs/tags/')"
#     needs: [linux, windows, macos, sdist]
#     steps:
#       - uses: actions/download-artifact@v3
#         with:
#           name: wheels
#       - name: Publish to PyPI
#         uses: PyO3/maturin-action@v1
#         env:
#           MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN2 }}
#         with:
#           command: upload
#           args: --skip-existing *
